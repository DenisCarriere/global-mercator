!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):e.mercator=r()}(this,function(){function e(r,t,o){var n,i,u,a,f,l,s,c,h,d,g=0,y=0,m="FeatureCollection"===r.type,p="Feature"===r.type,w=m?r.features.length:1;for(n=0;n<w;n++)for(h=m?r.features[n].geometry:p?r.geometry:r,d="GeometryCollection"===h.type,s=d?h.geometries.length:1,a=0;a<s;a++)if(l=d?h.geometries[a]:h,c=l.coordinates,g=!o||"Polygon"!==l.type&&"MultiPolygon"!==l.type?0:1,"Point"===l.type)t(c,y),y++;else if("LineString"===l.type||"MultiPoint"===l.type)for(i=0;i<c.length;i++)t(c[i],y),y++;else if("Polygon"===l.type||"MultiLineString"===l.type)for(i=0;i<c.length;i++)for(u=0;u<c[i].length-g;u++)t(c[i][u],y),y++;else if("MultiPolygon"===l.type)for(i=0;i<c.length;i++)for(u=0;u<c[i].length;u++)for(f=0;f<c[i][u].length-g;f++)t(c[i][u][f],y),y++;else{if("GeometryCollection"!==l.type)throw new Error("Unknown Geometry Type");for(i=0;i<l.geometries.length;i++)e(l.geometries[i],t,o)}}function r(r,t,o,n){var i=o;return e(r,function(e,r){i=0===r&&void 0===o?e:t(i,e,r)},n),i}function t(e,r){var t;switch(e.type){case"FeatureCollection":for(t=0;t<e.features.length;t++)r(e.features[t].properties,t);break;case"Feature":r(e.properties,0)}}function o(e,r,o){var n=o;return t(e,function(e,t){n=0===t&&void 0===o?e:r(n,e,t)}),n}function n(e,r){if("Feature"===e.type)r(e,0);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length;t++)r(e.features[t],t)}function i(e,r,t){var o=t;return n(e,function(e,n){o=0===n&&void 0===t?e:r(o,e,n)}),o}function u(r){var t=[];return e(r,function(e){t.push(e)}),t}function a(e,r){var t,o,n,i,u,a,f,l=0,s="FeatureCollection"===e.type,c="Feature"===e.type,h=s?e.features.length:1;for(t=0;t<h;t++)for(a=s?e.features[t].geometry:c?e.geometry:e,f="GeometryCollection"===a.type,u=f?a.geometries.length:1,n=0;n<u;n++)if(i=f?a.geometries[n]:a,"Point"===i.type||"LineString"===i.type||"MultiPoint"===i.type||"Polygon"===i.type||"MultiLineString"===i.type||"MultiPolygon"===i.type)r(i,l),l++;else{if("GeometryCollection"!==i.type)throw new Error("Unknown Geometry Type");for(o=0;o<i.geometries.length;o++)r(i.geometries[o],l),l++}}function f(e,r,t){var o=t;return a(e,function(e,n){o=0===n&&void 0===t?e:r(o,e,n)}),o}function l(e,r){if(!e)throw new Error("No geometry passed");return{type:"Feature",properties:r||{},geometry:e}}function s(e){if(!e)throw new Error("bbox is required");if(Array.isArray(e)||(e=_(e)),4!==e.length)throw new Error("bbox must have 4 numbers");var r=e[0],t=e[1],o=e[2],n=e[3];return r<-180&&o>180&&(r=-180,o=180),o<-180&&r>180&&(r=-180,o=180),t<-90&&n>90&&(t=-90,n=90),n<-90&&t>90&&(t=-90,n=90),n>90&&(n=90),t<-90&&(t=-90),Math.abs(e[0]-e[2])>360&&(r=-180,o=180),Math.abs(e[1]-e[3])>180&&(t=-90,n=90),r=d(r),t=h(t),o=d(o),n=h(n),[r,t,o,n]}function c(e){var r;if(!e)throw new Error("center is required");if(Array.isArray(e))if(4===e.length){var t=e,o=t[0],n=t[1],i=t[2],u=t[3];r=[(o+i)/2,(n+u)/2]}else r=[e[0],e[1]];else r=ye(e).geometry.coordinates;if(2!==r.length)throw new Error("center must have 2 numbers");return[d(r[0]),h(r[1])]}function h(e){if(void 0===e||null===e)throw new Error("lat is required");return(e>90||e<-90)&&(e%=180,e>90&&(e=-180+e),e<-90&&(e=180+e),e===-0&&(e=0)),e}function d(e){if(void 0===e||void 0===e)throw new Error("lng is required");return(e>180||e<-180)&&(e%=360,e>180&&(e=-360+e),e<-180&&(e=360+e),e===-0&&(e=0)),e}function g(e){return e=e||256,2*Math.PI*6378137/e}function y(e){var r=e[0],t=e[1],o=e[2];return(1<<o)*((1<<o)+r)+t}function m(e){var r=e[0],t=e[1],o=e[2],n=e[3],i=(r-o)/2+o,u=(t-n)/2+n;return i=Number(i.toFixed(6)),u=Number(u.toFixed(6)),[i,u]}function p(e,r){e=z(e,r);var t=e[0],o=e[1],n=t*ve/180,i=Math.log(Math.tan((90+o)*Math.PI/360))/(Math.PI/180);return i=i*ve/180,n=Number(n.toFixed(1)),i=Number(i.toFixed(1)),[n,i]}function w(e){var r=e[0],t=e[1],o=r/ve*180,n=t/ve*180;return n=180/Math.PI*(2*Math.atan(Math.exp(n*Math.PI/180))-Math.PI/2),o=Number(o.toFixed(6)),n=Number(n.toFixed(6)),[o,n]}function v(e,r,t){var o=e[0],n=e[1],i=Q(r,t);return[(o+ve)/i,(n+ve)/i,r]}function E(e,r,t){return e=z(e,t),x(v(p(e),r))}function b(e,r,t){return e=z(e,t),0===r?[0,0,0]:C(E(e,r))}function M(e,r){return 0===r?[0,0,0]:x(v(e,r))}function T(e,r){var t=e[0],o=e[1],n=e[2],i=Q(n,r),u=t*i-ve,a=o*i-ve;return u=Number(u.toFixed(1)),a=Number(a.toFixed(1)),[u,a]}function x(e,r,t){r=r||256;var o=e[0],n=e[1],i=e[2];if(0===i)return[0,0,0];R(i);var u=Math.ceil(o/r)-1,a=Math.ceil(n/r)-1;return u<0&&(u=0),a<0&&(a=0),[u,a,i]}function P(e,r,t){A(e,t),r=r||256;var o=e[0],n=e[1],i=e[2],u=T([o*r,n*r,i]),a=T([(o+1)*r,(n+1)*r,i]);return[u[0],u[1],a[0],a[1]]}function F(e,r){A(e,r);var t=e[0],o=e[1],n=e[2];if(0===n)return[-180,-85.051129,180,85.051129];var i=P([t,o,n]),u=i[0],a=i[1],f=i[2],l=i[3],s=w([u,a,n]),c=w([f,l,n]);return[s[0],s[1],c[0],c[1]]}function k(e){return P(L(e))}function N(e){return F(L(e))}function C(e,r){A(e,r);var t=e[0],o=e[1],n=e[2];return 0===n?[0,0,0]:[t,Math.pow(2,n)-1-o,n]}function L(e){var r=e[0],t=e[1],o=e[2];return[r,Math.pow(2,o)-t-1,o]}function I(e){return q(L(e))}function q(e,r){A(e,r);var t=e[0],o=e[1],n=e[2];if(0===n)return"";var i="";return o=Math.pow(2,n)-1-o,D(n,0,-1).map(function(e){var r=0,n=1<<e-1;0!=(t&n)&&(r+=1),0!=(o&n)&&(r+=2),i=i.concat(r)}),i}function B(e){return L(G(e))}function G(e){var r=0,t=0,o=e.length;return D(o,0,-1).map(function(n){var i=1<<n-1;switch(parseInt(e[o-n],0)){case 0:break;case 1:r+=i;break;case 2:t+=i;break;case 3:r+=i,t+=i;break;default:throw new Error("Invalid Quadkey digit sequence")}}),[r,t,o]}function S(e){var r=p([e[0],e[1]]),t=p([e[2],e[3]]);return[r[0],r[1],t[0],t[1]]}function A(e,r){var t=e[0],o=e[1],n=e[2];if(r===!1)return e;if(R(n),void 0===t||null===t)throw new Error("<x> is required");if(void 0===o||null===o)throw new Error("<y> is required");if(t<0)throw new Error("<x> must not be less than 0");if(o<0)throw new Error("<y> must not be less than 0");var i=Math.pow(2,n);if(t>=i||o>=i)throw new Error("Illegal parameters for tile");return e}function R(e){if(e===!1)return e;if(void 0===e||null===e)throw new Error("<zoom> is required");if(e<0)throw new Error("<zoom> cannot be less than 0");if(e>30)throw new Error("<zoom> cannot be greater than 30");return e}function z(e,r){if(r===!1)return e;var t=we(e[0]),o=pe(e[1]);return o>85&&(o=85),o<-85&&(o=-85),[t,o]}function Q(e,r){return g(r)/Math.pow(2,e)}function D(e,r,t){null==r&&(r=e||0,e=0),t||(t=r<e?-1:1);for(var o=Math.max(Math.ceil((r-e)/t),0),n=Array(o),i=0;i<o;i++,e+=t)n[i]=e;return n}function U(e){if(e&&e[0]&&4===e.length&&void 0===e[0][0])return e;if(e&&e[0]&&void 0!==e[0][0]){var r=e[0][0],t=e[0][1],o=e[0][2],n=e[0][3];return e.map(function(e){e[0]<r&&(r=e[0]),e[1]<t&&(t=e[1]),e[2]>o&&(o=e[2]),e[3]>n&&(n=e[3])}),[r,t,o,n]}}var j=e,Z=r,H=t,J=o,K=n,O=i,V=u,W=a,X=f,Y={coordEach:j,coordReduce:Z,propEach:H,propReduce:J,featureEach:K,featureReduce:O,coordAll:V,geomEach:W,geomReduce:X},$=Y.coordEach,_=function(e){var r=[1/0,1/0,-(1/0),-(1/0)];return $(e,function(e){r[0]>e[0]&&(r[0]=e[0]),r[1]>e[1]&&(r[1]=e[1]),r[2]<e[0]&&(r[2]=e[0]),r[3]<e[1]&&(r[3]=e[1])}),r},ee=l,re=function(e,r){if(!e)throw new Error("No coordinates passed");if(void 0===e.length)throw new Error("Coordinates must be an array");if(e.length<2)throw new Error("Coordinates must be at least 2 numbers long");if("number"!=typeof e[0]||"number"!=typeof e[1])throw new Error("Coordinates must numbers");return l({type:"Point",coordinates:e},r)},te=function(e,r){if(!e)throw new Error("No coordinates passed");for(var t=0;t<e.length;t++){var o=e[t];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var n=0;n<o[o.length-1].length;n++)if(o[o.length-1][n]!==o[0][n])throw new Error("First and last Position are not equivalent.")}return l({type:"Polygon",coordinates:e},r)},oe=function(e,r){if(!e)throw new Error("No coordinates passed");return l({type:"LineString",coordinates:e},r)},ne=function(e){if(!e)throw new Error("No features passed");return{type:"FeatureCollection",features:e}},ie=function(e,r){if(!e)throw new Error("No coordinates passed");return l({type:"MultiLineString",coordinates:e},r)},ue=function(e,r){if(!e)throw new Error("No coordinates passed");return l({type:"MultiPoint",coordinates:e},r)},ae=function(e,r){if(!e)throw new Error("No coordinates passed");return l({type:"MultiPolygon",coordinates:e},r)},fe=function(e,r){if(!e)throw new Error("No geometries passed");return l({type:"GeometryCollection",geometries:e},r)},le={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,kilometers:6373,kilometres:6373,feet:20908792.65},se=function(e,r){var t=le[r||"kilometers"];if(void 0===t)throw new Error("Invalid unit");return e*t},ce=function(e,r){var t=le[r||"kilometers"];if(void 0===t)throw new Error("Invalid unit");return e/t},he=function(e,r){var t=le[r||"kilometers"];if(void 0===t)throw new Error("Invalid unit");return e/t*57.2958},de={feature:ee,point:re,polygon:te,lineString:oe,featureCollection:ne,multiLineString:ie,multiPoint:ue,multiPolygon:ae,geometryCollection:fe,radiansToDistance:se,distanceToRadians:ce,distanceToDegrees:he},ge=de.point,ye=function(e){var r=_(e);return ge([(r[0]+r[2])/2,(r[1]+r[3])/2])},me={bbox:s,longitude:d,latitude:h,center:c},pe=me.latitude,we=me.longitude,ve=2*Math.PI*6378137/2;return{hash:y,bboxToCenter:m,lngLatToMeters:p,metersToLngLat:w,metersToPixels:v,lngLatToTile:E,lngLatToGoogle:b,metersToTile:M,pixelsToMeters:T,pixelsToTile:x,tileToBBoxMeters:P,tileToBBox:F,googleToBBoxMeters:k,googleToBBox:N,tileToGoogle:C,googleToTile:L,googleToQuadkey:I,tileToQuadkey:q,quadkeyToTile:B,quadkeyToGoogle:G,bboxToMeters:S,validateTile:A,validateZoom:R,validateLngLat:z,resolution:Q,range:D,maxBBox:U}});
